{"version":3,"file":"concat.js","sources":["../concat.js"],"sourcesContent":["\"use strict\";\r\nconst fs = require(\"fs\");\r\nconst path = require(\"path\");\r\n/* tslint:disable: callable-types only-arrow-functions */\r\nfunction concat(targetDir, destination, callback) {\r\n    fs.readdir(targetDir, function (err, files) {\r\n        if (err) {\r\n            typeof callback === 'function' ? callback(err) : console.error(err);\r\n            return;\r\n        }\r\n        let fileReadStream;\r\n        const fileWriteStream = fs.createWriteStream(destination);\r\n        fileWriteStream.on('close', function () {\r\n            if (typeof callback === 'function') {\r\n                callback(null);\r\n            }\r\n        });\r\n        fileWriteStream.on('error', function (err1) {\r\n            typeof callback === 'function' ? callback(err1) : console.error(err1);\r\n        });\r\n        fileWriteStream.on('finish', function () {\r\n            console.log('All writes are now complete.');\r\n        });\r\n        // Invoke createSteamFile\r\n        createSteamFile(files);\r\n        // 递归 从每个文件创建readStream pipe 到同一个 writeStream\r\n        function createSteamFile(files1) {\r\n            if (files1.length === 0) {\r\n                fileWriteStream.end();\r\n                return;\r\n            }\r\n            const currentFile = path.join(targetDir, files1.shift() || '');\r\n            fileReadStream = fs.createReadStream(currentFile);\r\n            fileReadStream.pipe(fileWriteStream, { end: false });\r\n            fileReadStream.on('data', function (chunk) {\r\n                // console.log('Received ' + chunk.length + ' bytes of ' + currentFile);\r\n            });\r\n            fileReadStream.on('end', function () {\r\n                console.log(currentFile + ' has appended to writeStream.');\r\n                createSteamFile(files1);\r\n            });\r\n            fileReadStream.on('error', function (err2) {\r\n                typeof callback === 'function'\r\n                    ? callback(err2)\r\n                    : console.error(err2);\r\n            });\r\n        }\r\n    });\r\n}\r\nmodule.exports = concat;\r\n"],"names":["const","fs","require","path","module","exports","targetDir","destination","callback","readdir","err","files","console","error","let","fileReadStream","fileWriteStream","createWriteStream","on","err1","log","createSteamFile","files1","length","currentFile","join","shift","createReadStream","pipe","end","chunk","err2"],"mappings":"AACAA,IAAMC,EAAKC,QAAQ,MACbC,EAAOD,QAAQ,QA+CrBE,OAAOC,QA7CP,SAAgBC,EAAWC,EAAaC,GACpCP,EAAGQ,QAAQH,EAAW,SAAUI,EAAKC,GACjC,GAAID,EACoB,mBAAbF,EAA0BA,EAASE,GAAOE,QAAQC,MAAMH,OADnE,CAIAI,IAAIC,EACEC,EAAkBf,EAAGgB,kBAAkBV,GAC7CS,EAAgBE,GAAG,QAAS,WACA,mBAAbV,GACPA,EAAS,QAGjBQ,EAAgBE,GAAG,QAAS,SAAUC,GACd,mBAAbX,EAA0BA,EAASW,GAAQP,QAAQC,MAAMM,KAEpEH,EAAgBE,GAAG,SAAU,WACzBN,QAAQQ,IAAI,kCAKhB,SAASC,EAAgBC,GACrB,GAAsB,IAAlBA,EAAOC,OAAX,CAIAvB,IAAMwB,EAAcrB,EAAKsB,KAAKnB,EAAWgB,EAAOI,SAAW,KAC3DX,EAAiBd,EAAG0B,iBAAiBH,IACtBI,KAAKZ,GAAmBa,KAAK,IAC5Cd,EAAeG,GAAG,OAAQ,SAAUY,MAGpCf,EAAeG,GAAG,MAAO,WACrBN,QAAQQ,IAAII,EAAc,iCAC1BH,EAAgBC,KAEpBP,EAAeG,GAAG,QAAS,SAAUa,GACb,mBAAbvB,EACDA,EAASuB,GACTnB,QAAQC,MAAMkB,UAhBpBf,EAAgBa,MAJxBR,CAAgBV"}