{"version":3,"file":"concat.umd.js","sources":["../concat.js"],"sourcesContent":["var fs = require('fs')\r\nvar path = require('path')\r\n\r\nfunction concat(targetDir, destination, callback) {\r\n    fs.readdir(targetDir, function(err, files) {\r\n        if (err) {\r\n            (typeof callback === 'function') ? callback(err) : console.error(err)\r\n            return\r\n        }\r\n    \r\n        var fileReadStream\r\n        var fileWriteStream = fs.createWriteStream(destination)\r\n    \r\n        fileWriteStream.on('close', function() {\r\n            (typeof callback === 'function') && callback(null)\r\n        })\r\n    \r\n        fileWriteStream.on('error', function(err) {\r\n            (typeof callback === 'function') ? callback(err) : console.error(err)\r\n        })\r\n    \r\n        fileWriteStream.on('finish', function() {\r\n            console.log('All writes are now complete.')\r\n        })\r\n        \r\n        // Invoke createSteamFile\r\n        createSteamFile()\r\n        \r\n        // 递归 从每个文件创建readStream pipe 到同一个 writeStream\r\n        function createSteamFile() {\r\n            if (files.length === 0) {\r\n                fileWriteStream.end()\r\n                return\r\n            }\r\n    \r\n            var currentFile = path.join(targetDir, files.shift())\r\n            fileReadStream = fs.createReadStream(currentFile)\r\n            fileReadStream.pipe(fileWriteStream, { end: false })\r\n    \r\n            fileReadStream.on('data', function(chunk) {\r\n                // console.log('Received ' + chunk.length + ' bytes of ' + currentFile);\r\n            })\r\n    \r\n            fileReadStream.on('end', function() {\r\n                console.log(currentFile + ' has appended to writeStream.')\r\n                createSteamFile()\r\n            })\r\n    \r\n            fileReadStream.on('error', function(err) {\r\n                (typeof callback === 'function') ? callback(err) : console.error(err)\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\nmodule.exports = concat\r\n"],"names":["fs","require","path","module","exports","targetDir","destination","callback","readdir","err","files","console","error","fileReadStream","fileWriteStream","createWriteStream","on","log","createSteamFile","length","currentFile","join","shift","createReadStream","pipe","end","chunk"],"mappings":"0IAAA,IAAIA,EAAKC,QAAQ,MACbC,EAAOD,QAAQ,QAsDnBE,OAAOC,QApDP,SAAgBC,EAAWC,EAAaC,GACpCP,EAAGQ,QAAQH,EAAW,SAASI,EAAKC,GAChC,GAAID,EACqB,mBAAbF,EAA2BA,EAASE,GAAOE,QAAQC,MAAMH,OADrE,CAKA,IAAII,EACAC,EAAkBd,EAAGe,kBAAkBT,GAE3CQ,EAAgBE,GAAG,QAAS,WACH,mBAAbT,GAA4BA,EAAS,QAGjDO,EAAgBE,GAAG,QAAS,SAASP,GACZ,mBAAbF,EAA2BA,EAASE,GAAOE,QAAQC,MAAMH,KAGrEK,EAAgBE,GAAG,SAAU,WACzBL,QAAQM,IAAI,kCAOhB,SAASC,IACL,GAAqB,IAAjBR,EAAMS,OAAV,CAKA,IAAIC,EAAclB,EAAKmB,KAAKhB,EAAWK,EAAMY,UAC7CT,EAAiBb,EAAGuB,iBAAiBH,IACtBI,KAAKV,GAAmBW,KAAK,IAE5CZ,EAAeG,GAAG,OAAQ,SAASU,MAInCb,EAAeG,GAAG,MAAO,WACrBL,QAAQM,IAAIG,EAAc,iCAC1BF,MAGJL,EAAeG,GAAG,QAAS,SAASP,GACX,mBAAbF,EAA2BA,EAASE,GAAOE,QAAQC,MAAMH,UAlBjEK,EAAgBW,MALxBP"}